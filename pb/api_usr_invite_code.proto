// Copyright 2020-2021 Team RelicFrog
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package api_usr_invite_code;

import "google/protobuf/timestamp.proto";

option go_package = ".;api_usr_invite_code";

//
// -- proto struct / helper message objects --
//

message Empty {}

//
// -- proto messages --
//

message UserInviteCode {

  string id = 1;
  string meta_code = 2;
  string meta_for_app_role = 3;

  bool is_fixture = 4;
  bool is_deleted = 5;
  bool is_used = 6;

  google.protobuf.Timestamp meta_valid_from = 7;
  google.protobuf.Timestamp meta_valid_to = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  google.protobuf.Timestamp deleted_at = 11;
}

message UserInviteCodeFilter {

  string meta_code = 1;
  string meta_for_app_role = 2;
}

//
// -- UserInviteCodeService definition --
//

service UserInviteCodeService {

  rpc CreateInviteCode(CreateInviteCodeReq) returns (CreateInviteCodeRes);
  rpc GetInviteCode(GetInviteCodeReq) returns (GetInviteCodeRes);
  rpc UpdateInviteCode(UpdateInviteCodeReq) returns (UpdateInviteCodeRes);
  rpc DeleteInviteCode(DeleteInviteCodeReq) returns (DeleteInviteCodeRes);
  rpc ListInviteCodes(ListInviteCodeReq) returns (stream ListInviteCodeRes);
  rpc ListFilteredInviteCodes(ListFilteredInviteCodeReq) returns (stream ListFilteredInviteCodeRes);
  rpc GetVersion (VersionReq) returns (VersionRes);
}

message CreateInviteCodeReq       { UserInviteCode inviteCode = 1;   }
message CreateInviteCodeRes       { UserInviteCode inviteCode = 1;   }
message GetInviteCodeReq          { string id = 1;                   }
message GetInviteCodeRes          { UserInviteCode inviteCode = 1;   }
message UpdateInviteCodeReq       { UserInviteCode inviteCode = 1;   }
message UpdateInviteCodeRes       { UserInviteCode inviteCode = 1;   }
message DeleteInviteCodeReq       { string id = 1;                   }
message DeleteInviteCodeRes       { bool success = 1;                }
message ListFilteredInviteCodeReq { UserInviteCodeFilter filter = 1; }
message ListFilteredInviteCodeRes { UserInviteCode inviteCode = 1;   }
message ListInviteCodeReq         {                                  }
message ListInviteCodeRes         { UserInviteCode inviteCode = 1;   }
message VersionReq                {                                  }
message VersionRes                { string version = 1;              }
