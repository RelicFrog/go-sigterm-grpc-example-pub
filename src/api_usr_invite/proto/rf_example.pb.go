// Copyright 2020 Team RelicFrog
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: rf_example.proto

package aribor

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserProfile_PhoneType int32

const (
	UserProfile_UNKNOWN UserProfile_PhoneType = 0
	UserProfile_MOBILE  UserProfile_PhoneType = 1
	UserProfile_HOME    UserProfile_PhoneType = 2
	UserProfile_WORK    UserProfile_PhoneType = 3
)

// Enum value maps for UserProfile_PhoneType.
var (
	UserProfile_PhoneType_name = map[int32]string{
		0: "UNKNOWN",
		1: "MOBILE",
		2: "HOME",
		3: "WORK",
	}
	UserProfile_PhoneType_value = map[string]int32{
		"UNKNOWN": 0,
		"MOBILE":  1,
		"HOME":    2,
		"WORK":    3,
	}
)

func (x UserProfile_PhoneType) Enum() *UserProfile_PhoneType {
	p := new(UserProfile_PhoneType)
	*p = x
	return p
}

func (x UserProfile_PhoneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserProfile_PhoneType) Descriptor() protoreflect.EnumDescriptor {
	return file_rf_example_proto_enumTypes[0].Descriptor()
}

func (UserProfile_PhoneType) Type() protoreflect.EnumType {
	return &file_rf_example_proto_enumTypes[0]
}

func (x UserProfile_PhoneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserProfile_PhoneType.Descriptor instead.
func (UserProfile_PhoneType) EnumDescriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{8, 0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{0}
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without
	// a year.
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a
	// month and day.
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
	// to specify a year by itself or a year and month where the day isn't
	// significant.
	Day int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{1}
}

func (x *Date) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type UserInviteCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MetaCode       string                 `protobuf:"bytes,2,opt,name=meta_code,json=metaCode,proto3" json:"meta_code,omitempty"`
	MetaForAppRole string                 `protobuf:"bytes,3,opt,name=meta_for_app_role,json=metaForAppRole,proto3" json:"meta_for_app_role,omitempty"`
	IsFixture      bool                   `protobuf:"varint,4,opt,name=is_fixture,json=isFixture,proto3" json:"is_fixture,omitempty"`
	IsDeleted      bool                   `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	IsTest         bool                   `protobuf:"varint,6,opt,name=is_test,json=isTest,proto3" json:"is_test,omitempty"`
	MetaValidFrom  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=meta_valid_from,json=metaValidFrom,proto3" json:"meta_valid_from,omitempty"`
	MetaValidTo    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=meta_valid_to,json=metaValidTo,proto3" json:"meta_valid_to,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserInviteCode) Reset() {
	*x = UserInviteCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInviteCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInviteCode) ProtoMessage() {}

func (x *UserInviteCode) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInviteCode.ProtoReflect.Descriptor instead.
func (*UserInviteCode) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{2}
}

func (x *UserInviteCode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInviteCode) GetMetaCode() string {
	if x != nil {
		return x.MetaCode
	}
	return ""
}

func (x *UserInviteCode) GetMetaForAppRole() string {
	if x != nil {
		return x.MetaForAppRole
	}
	return ""
}

func (x *UserInviteCode) GetIsFixture() bool {
	if x != nil {
		return x.IsFixture
	}
	return false
}

func (x *UserInviteCode) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserInviteCode) GetIsTest() bool {
	if x != nil {
		return x.IsTest
	}
	return false
}

func (x *UserInviteCode) GetMetaValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.MetaValidFrom
	}
	return nil
}

func (x *UserInviteCode) GetMetaValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.MetaValidTo
	}
	return nil
}

func (x *UserInviteCode) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserInviteCode) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UserInviteCodeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaCode       string `protobuf:"bytes,1,opt,name=meta_code,json=metaCode,proto3" json:"meta_code,omitempty"`
	MetaForAppRole string `protobuf:"bytes,2,opt,name=meta_for_app_role,json=metaForAppRole,proto3" json:"meta_for_app_role,omitempty"`
}

func (x *UserInviteCodeFilter) Reset() {
	*x = UserInviteCodeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInviteCodeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInviteCodeFilter) ProtoMessage() {}

func (x *UserInviteCodeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInviteCodeFilter.ProtoReflect.Descriptor instead.
func (*UserInviteCodeFilter) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{3}
}

func (x *UserInviteCodeFilter) GetMetaCode() string {
	if x != nil {
		return x.MetaCode
	}
	return ""
}

func (x *UserInviteCodeFilter) GetMetaForAppRole() string {
	if x != nil {
		return x.MetaForAppRole
	}
	return ""
}

type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tag         string                 `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"` // e.g. "ADM" for admin / "DIR" for director
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Weight      int32                  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
	IsLocked    bool                   `protobuf:"varint,6,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"` // not deletable (e.g. for role "ADM")
	IsFixture   bool                   `protobuf:"varint,7,opt,name=is_fixture,json=isFixture,proto3" json:"is_fixture,omitempty"`
	IsDeleted   bool                   `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{4}
}

func (x *UserRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRole) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *UserRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserRole) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *UserRole) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *UserRole) GetIsFixture() bool {
	if x != nil {
		return x.IsFixture
	}
	return false
}

func (x *UserRole) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserRole) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserRole) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserRole) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UserGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Users       []*User                `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	IsFixture   bool                   `protobuf:"varint,5,opt,name=is_fixture,json=isFixture,proto3" json:"is_fixture,omitempty"`
	IsDeleted   bool                   `protobuf:"varint,6,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserGroup) Reset() {
	*x = UserGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroup) ProtoMessage() {}

func (x *UserGroup) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroup.ProtoReflect.Descriptor instead.
func (*UserGroup) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{5}
}

func (x *UserGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserGroup) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UserGroup) GetIsFixture() bool {
	if x != nil {
		return x.IsFixture
	}
	return false
}

func (x *UserGroup) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserGroup) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserGroup) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserGroup) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName   string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email       string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	SecPwdHash  string                 `protobuf:"bytes,6,opt,name=sec_pwd_hash,json=secPwdHash,proto3" json:"sec_pwd_hash,omitempty"`
	SecPwdSalt  string                 `protobuf:"bytes,7,opt,name=sec_pwd_salt,json=secPwdSalt,proto3" json:"sec_pwd_salt,omitempty"`
	SecUserName string                 `protobuf:"bytes,8,opt,name=sec_user_name,json=secUserName,proto3" json:"sec_user_name,omitempty"`
	UserRole    *UserRole              `protobuf:"bytes,9,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
	UserProfile *UserProfile           `protobuf:"bytes,10,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	IsFixture   bool                   `protobuf:"varint,11,opt,name=is_fixture,json=isFixture,proto3" json:"is_fixture,omitempty"`
	IsDeleted   bool                   `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{6}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetSecPwdHash() string {
	if x != nil {
		return x.SecPwdHash
	}
	return ""
}

func (x *User) GetSecPwdSalt() string {
	if x != nil {
		return x.SecPwdSalt
	}
	return ""
}

func (x *User) GetSecUserName() string {
	if x != nil {
		return x.SecUserName
	}
	return ""
}

func (x *User) GetUserRole() *UserRole {
	if x != nil {
		return x.UserRole
	}
	return nil
}

func (x *User) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

func (x *User) GetIsFixture() bool {
	if x != nil {
		return x.IsFixture
	}
	return false
}

func (x *User) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UserAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Street    string                 `protobuf:"bytes,2,opt,name=street,proto3" json:"street,omitempty"`
	StreetNum string                 `protobuf:"bytes,3,opt,name=street_num,json=streetNum,proto3" json:"street_num,omitempty"`
	ZipCode   string                 `protobuf:"bytes,4,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	State     string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Country   string                 `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	IsDeleted bool                   `protobuf:"varint,7,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserAddress) Reset() {
	*x = UserAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAddress) ProtoMessage() {}

func (x *UserAddress) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAddress.ProtoReflect.Descriptor instead.
func (*UserAddress) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{7}
}

func (x *UserAddress) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserAddress) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *UserAddress) GetStreetNum() string {
	if x != nil {
		return x.StreetNum
	}
	return ""
}

func (x *UserAddress) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *UserAddress) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UserAddress) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserAddress) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserAddress) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserAddress) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserAddress) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MiddleName    string                     `protobuf:"bytes,9,opt,name=middle_name,json=middleName,proto3" json:"middle_name,omitempty"`
	BirthName     string                     `protobuf:"bytes,10,opt,name=birth_name,json=birthName,proto3" json:"birth_name,omitempty"`
	BirthCity     string                     `protobuf:"bytes,11,opt,name=birth_city,json=birthCity,proto3" json:"birth_city,omitempty"`
	BirthCountry  string                     `protobuf:"bytes,12,opt,name=birth_country,json=birthCountry,proto3" json:"birth_country,omitempty"`
	UserAvatarUrl string                     `protobuf:"bytes,13,opt,name=user_avatar_url,json=userAvatarUrl,proto3" json:"user_avatar_url,omitempty"`
	Address       *UserAddress               `protobuf:"bytes,14,opt,name=address,proto3" json:"address,omitempty"`
	Settings      *UserConfig                `protobuf:"bytes,15,opt,name=settings,proto3" json:"settings,omitempty"`
	Dob           *Date                      `protobuf:"bytes,16,opt,name=dob,proto3" json:"dob,omitempty"`
	PhoneNumbers  []*UserProfile_PhoneNumber `protobuf:"bytes,17,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"`
	IsFixture     bool                       `protobuf:"varint,18,opt,name=is_fixture,json=isFixture,proto3" json:"is_fixture,omitempty"`
	IsDeleted     bool                       `protobuf:"varint,19,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	CreatedAt     *timestamppb.Timestamp     `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp     `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     *timestamppb.Timestamp     `protobuf:"bytes,22,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{8}
}

func (x *UserProfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserProfile) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *UserProfile) GetBirthName() string {
	if x != nil {
		return x.BirthName
	}
	return ""
}

func (x *UserProfile) GetBirthCity() string {
	if x != nil {
		return x.BirthCity
	}
	return ""
}

func (x *UserProfile) GetBirthCountry() string {
	if x != nil {
		return x.BirthCountry
	}
	return ""
}

func (x *UserProfile) GetUserAvatarUrl() string {
	if x != nil {
		return x.UserAvatarUrl
	}
	return ""
}

func (x *UserProfile) GetAddress() *UserAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *UserProfile) GetSettings() *UserConfig {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *UserProfile) GetDob() *Date {
	if x != nil {
		return x.Dob
	}
	return nil
}

func (x *UserProfile) GetPhoneNumbers() []*UserProfile_PhoneNumber {
	if x != nil {
		return x.PhoneNumbers
	}
	return nil
}

func (x *UserProfile) GetIsFixture() bool {
	if x != nil {
		return x.IsFixture
	}
	return false
}

func (x *UserProfile) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserProfile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserProfile) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserProfile) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UserConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Shortcuts []string `protobuf:"bytes,2,rep,name=shortcuts,proto3" json:"shortcuts,omitempty"`
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{9}
}

func (x *UserConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserConfig) GetShortcuts() []string {
	if x != nil {
		return x.Shortcuts
	}
	return nil
}

type CreateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleReq) Reset() {
	*x = CreateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleReq) ProtoMessage() {}

func (x *CreateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleReq.ProtoReflect.Descriptor instead.
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{10}
}

func (x *CreateRoleReq) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type CreateRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleRes) Reset() {
	*x = CreateRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRes) ProtoMessage() {}

func (x *CreateRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRes.ProtoReflect.Descriptor instead.
func (*CreateRoleRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type GetRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleReq) Reset() {
	*x = GetRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleReq) ProtoMessage() {}

func (x *GetRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleReq.ProtoReflect.Descriptor instead.
func (*GetRoleReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoleReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleRes) Reset() {
	*x = GetRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRes) ProtoMessage() {}

func (x *GetRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRes.ProtoReflect.Descriptor instead.
func (*GetRoleRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateRoleReq) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type UpdateRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateRoleRes) Reset() {
	*x = UpdateRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRes) ProtoMessage() {}

func (x *UpdateRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRes.ProtoReflect.Descriptor instead.
func (*UpdateRoleRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRoleReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteRoleRes) Reset() {
	*x = DeleteRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRes) ProtoMessage() {}

func (x *DeleteRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRes.ProtoReflect.Descriptor instead.
func (*DeleteRoleRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRoleRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRoleReq) Reset() {
	*x = ListRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleReq) ProtoMessage() {}

func (x *ListRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleReq.ProtoReflect.Descriptor instead.
func (*ListRoleReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{18}
}

type ListRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ListRoleRes) Reset() {
	*x = ListRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleRes) ProtoMessage() {}

func (x *ListRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleRes.ProtoReflect.Descriptor instead.
func (*ListRoleRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{19}
}

func (x *ListRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type CreateInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *CreateInviteCodeReq) Reset() {
	*x = CreateInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInviteCodeReq) ProtoMessage() {}

func (x *CreateInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInviteCodeReq.ProtoReflect.Descriptor instead.
func (*CreateInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{20}
}

func (x *CreateInviteCodeReq) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type CreateInviteCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *CreateInviteCodeRes) Reset() {
	*x = CreateInviteCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInviteCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInviteCodeRes) ProtoMessage() {}

func (x *CreateInviteCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInviteCodeRes.ProtoReflect.Descriptor instead.
func (*CreateInviteCodeRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{21}
}

func (x *CreateInviteCodeRes) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type GetInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInviteCodeReq) Reset() {
	*x = GetInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeReq) ProtoMessage() {}

func (x *GetInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeReq.ProtoReflect.Descriptor instead.
func (*GetInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{22}
}

func (x *GetInviteCodeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetInviteCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *GetInviteCodeRes) Reset() {
	*x = GetInviteCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInviteCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInviteCodeRes) ProtoMessage() {}

func (x *GetInviteCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInviteCodeRes.ProtoReflect.Descriptor instead.
func (*GetInviteCodeRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{23}
}

func (x *GetInviteCodeRes) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type UpdateInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *UpdateInviteCodeReq) Reset() {
	*x = UpdateInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInviteCodeReq) ProtoMessage() {}

func (x *UpdateInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInviteCodeReq.ProtoReflect.Descriptor instead.
func (*UpdateInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateInviteCodeReq) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type UpdateInviteCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *UpdateInviteCodeRes) Reset() {
	*x = UpdateInviteCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInviteCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInviteCodeRes) ProtoMessage() {}

func (x *UpdateInviteCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInviteCodeRes.ProtoReflect.Descriptor instead.
func (*UpdateInviteCodeRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateInviteCodeRes) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type DeleteInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteInviteCodeReq) Reset() {
	*x = DeleteInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInviteCodeReq) ProtoMessage() {}

func (x *DeleteInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInviteCodeReq.ProtoReflect.Descriptor instead.
func (*DeleteInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteInviteCodeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteInviteCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteInviteCodeRes) Reset() {
	*x = DeleteInviteCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInviteCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInviteCodeRes) ProtoMessage() {}

func (x *DeleteInviteCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInviteCodeRes.ProtoReflect.Descriptor instead.
func (*DeleteInviteCodeRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteInviteCodeRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListFilteredInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *UserInviteCodeFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListFilteredInviteCodeReq) Reset() {
	*x = ListFilteredInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilteredInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilteredInviteCodeReq) ProtoMessage() {}

func (x *ListFilteredInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilteredInviteCodeReq.ProtoReflect.Descriptor instead.
func (*ListFilteredInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{28}
}

func (x *ListFilteredInviteCodeReq) GetFilter() *UserInviteCodeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListFilteredInviteCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *ListFilteredInviteCodeRes) Reset() {
	*x = ListFilteredInviteCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilteredInviteCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilteredInviteCodeRes) ProtoMessage() {}

func (x *ListFilteredInviteCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilteredInviteCodeRes.ProtoReflect.Descriptor instead.
func (*ListFilteredInviteCodeRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{29}
}

func (x *ListFilteredInviteCodeRes) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type ListInviteCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListInviteCodeReq) Reset() {
	*x = ListInviteCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInviteCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInviteCodeReq) ProtoMessage() {}

func (x *ListInviteCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInviteCodeReq.ProtoReflect.Descriptor instead.
func (*ListInviteCodeReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{30}
}

type ListInviteCodeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode *UserInviteCode `protobuf:"bytes,1,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
}

func (x *ListInviteCodeRes) Reset() {
	*x = ListInviteCodeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInviteCodeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInviteCodeRes) ProtoMessage() {}

func (x *ListInviteCodeRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInviteCodeRes.ProtoReflect.Descriptor instead.
func (*ListInviteCodeRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{31}
}

func (x *ListInviteCodeRes) GetInviteCode() *UserInviteCode {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

type VersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionReq) Reset() {
	*x = VersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionReq) ProtoMessage() {}

func (x *VersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionReq.ProtoReflect.Descriptor instead.
func (*VersionReq) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{32}
}

type VersionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionRes) Reset() {
	*x = VersionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRes) ProtoMessage() {}

func (x *VersionRes) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRes.ProtoReflect.Descriptor instead.
func (*VersionRes) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{33}
}

func (x *VersionRes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type UserProfile_PhoneNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string                `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Type   UserProfile_PhoneType `protobuf:"varint,2,opt,name=type,proto3,enum=aribor.UserProfile_PhoneType" json:"type,omitempty"`
}

func (x *UserProfile_PhoneNumber) Reset() {
	*x = UserProfile_PhoneNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfile_PhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile_PhoneNumber) ProtoMessage() {}

func (x *UserProfile_PhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile_PhoneNumber.ProtoReflect.Descriptor instead.
func (*UserProfile_PhoneNumber) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{8, 0}
}

func (x *UserProfile_PhoneNumber) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *UserProfile_PhoneNumber) GetType() UserProfile_PhoneType {
	if x != nil {
		return x.Type
	}
	return UserProfile_UNKNOWN
}

type UserConfig_Layout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Style            string `protobuf:"bytes,1,opt,name=style,proto3" json:"style,omitempty"`
	CustomScrollbars bool   `protobuf:"varint,2,opt,name=custom_scrollbars,json=customScrollbars,proto3" json:"custom_scrollbars,omitempty"`
	ThemeMain        string `protobuf:"bytes,3,opt,name=theme_main,json=themeMain,proto3" json:"theme_main,omitempty"`
	ThemeNavbar      string `protobuf:"bytes,4,opt,name=theme_navbar,json=themeNavbar,proto3" json:"theme_navbar,omitempty"`
	ThemeToolbar     string `protobuf:"bytes,5,opt,name=theme_toolbar,json=themeToolbar,proto3" json:"theme_toolbar,omitempty"`
	ThemeFooter      string `protobuf:"bytes,6,opt,name=theme_footer,json=themeFooter,proto3" json:"theme_footer,omitempty"`
}

func (x *UserConfig_Layout) Reset() {
	*x = UserConfig_Layout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfig_Layout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig_Layout) ProtoMessage() {}

func (x *UserConfig_Layout) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig_Layout.ProtoReflect.Descriptor instead.
func (*UserConfig_Layout) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UserConfig_Layout) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *UserConfig_Layout) GetCustomScrollbars() bool {
	if x != nil {
		return x.CustomScrollbars
	}
	return false
}

func (x *UserConfig_Layout) GetThemeMain() string {
	if x != nil {
		return x.ThemeMain
	}
	return ""
}

func (x *UserConfig_Layout) GetThemeNavbar() string {
	if x != nil {
		return x.ThemeNavbar
	}
	return ""
}

func (x *UserConfig_Layout) GetThemeToolbar() string {
	if x != nil {
		return x.ThemeToolbar
	}
	return ""
}

func (x *UserConfig_Layout) GetThemeFooter() string {
	if x != nil {
		return x.ThemeFooter
	}
	return ""
}

type UserConfig_Layout_LayoutConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scroll string `protobuf:"bytes,1,opt,name=scroll,proto3" json:"scroll,omitempty"`
	Mode   string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *UserConfig_Layout_LayoutConfig) Reset() {
	*x = UserConfig_Layout_LayoutConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfig_Layout_LayoutConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig_Layout_LayoutConfig) ProtoMessage() {}

func (x *UserConfig_Layout_LayoutConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig_Layout_LayoutConfig.ProtoReflect.Descriptor instead.
func (*UserConfig_Layout_LayoutConfig) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (x *UserConfig_Layout_LayoutConfig) GetScroll() string {
	if x != nil {
		return x.Scroll
	}
	return ""
}

func (x *UserConfig_Layout_LayoutConfig) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type UserConfig_Layout_LayoutConfig_LayoutBlockConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Display  bool   `protobuf:"varint,2,opt,name=display,proto3" json:"display,omitempty"`
	Folded   bool   `protobuf:"varint,3,opt,name=folded,proto3" json:"folded,omitempty"`
}

func (x *UserConfig_Layout_LayoutConfig_LayoutBlockConfig) Reset() {
	*x = UserConfig_Layout_LayoutConfig_LayoutBlockConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rf_example_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfig_Layout_LayoutConfig_LayoutBlockConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig_Layout_LayoutConfig_LayoutBlockConfig) ProtoMessage() {}

func (x *UserConfig_Layout_LayoutConfig_LayoutBlockConfig) ProtoReflect() protoreflect.Message {
	mi := &file_rf_example_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig_Layout_LayoutConfig_LayoutBlockConfig.ProtoReflect.Descriptor instead.
func (*UserConfig_Layout_LayoutConfig_LayoutBlockConfig) Descriptor() ([]byte, []int) {
	return file_rf_example_proto_rawDescGZIP(), []int{9, 0, 0, 0}
}

func (x *UserConfig_Layout_LayoutConfig_LayoutBlockConfig) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *UserConfig_Layout_LayoutConfig_LayoutBlockConfig) GetDisplay() bool {
	if x != nil {
		return x.Display
	}
	return false
}

func (x *UserConfig_Layout_LayoutConfig_LayoutBlockConfig) GetFolded() bool {
	if x != nil {
		return x.Folded
	}
	return false
}

var File_rf_example_proto protoreflect.FileDescriptor

var file_rf_example_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x66, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0xb9, 0x03, 0x0a, 0x0e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x69, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x54, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x6d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3e,
	0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70,
	0x52, 0x6f, 0x6c, 0x65, 0x22, 0x86, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe4, 0x02,
	0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x22, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x69, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xa6, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x20, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x5f, 0x70, 0x77, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x50, 0x77, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x5f, 0x70, 0x77, 0x64, 0x5f, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x50, 0x77, 0x64, 0x53,
	0x61, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x69,
	0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xef, 0x02,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x91, 0x06, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x43, 0x69, 0x74, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x69, 0x72, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2d, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61,
	0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x03, 0x64, 0x6f,
	0x62, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x03, 0x64, 0x6f, 0x62, 0x12, 0x44, 0x0a, 0x0d, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a,
	0x58, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x09, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x4f, 0x52,
	0x4b, 0x10, 0x03, 0x22, 0xb2, 0x03, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x73,
	0x1a, 0xf5, 0x02, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x63, 0x72, 0x6f,
	0x6c, 0x6c, 0x62, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x72, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x76, 0x62, 0x61, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4e, 0x61, 0x76, 0x62, 0x61, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x62, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x6f,
	0x6f, 0x6c, 0x62, 0x61, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x66,
	0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x1a, 0x9d, 0x01, 0x0a, 0x0c, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x6f, 0x6c,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x1a, 0x61, 0x0a, 0x11, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x64, 0x22, 0x35, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x35, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x35, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x35, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x22, 0x33, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0a, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x51, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x53, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x22, 0x4b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0a,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x22, 0x26, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xb1, 0x02, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x61,
	0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x72, 0x69, 0x62,
	0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x72,
	0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x30, 0x01, 0x32, 0xaa,
	0x04, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x61,
	0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x72, 0x69, 0x62,
	0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1b, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61,
	0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e,
	0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x72, 0x69,
	0x62, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x72, 0x69,
	0x62, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x30, 0x01, 0x12, 0x61, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x21, 0x2e,
	0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x3b, 0x61, 0x72, 0x69, 0x62, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rf_example_proto_rawDescOnce sync.Once
	file_rf_example_proto_rawDescData = file_rf_example_proto_rawDesc
)

func file_rf_example_proto_rawDescGZIP() []byte {
	file_rf_example_proto_rawDescOnce.Do(func() {
		file_rf_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_rf_example_proto_rawDescData)
	})
	return file_rf_example_proto_rawDescData
}

var file_rf_example_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rf_example_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_rf_example_proto_goTypes = []interface{}{
	(UserProfile_PhoneType)(0),             // 0: aribor.UserProfile.PhoneType
	(*Empty)(nil),                          // 1: aribor.Empty
	(*Date)(nil),                           // 2: aribor.Date
	(*UserInviteCode)(nil),                 // 3: aribor.UserInviteCode
	(*UserInviteCodeFilter)(nil),           // 4: aribor.UserInviteCodeFilter
	(*UserRole)(nil),                       // 5: aribor.UserRole
	(*UserGroup)(nil),                      // 6: aribor.UserGroup
	(*User)(nil),                           // 7: aribor.User
	(*UserAddress)(nil),                    // 8: aribor.UserAddress
	(*UserProfile)(nil),                    // 9: aribor.UserProfile
	(*UserConfig)(nil),                     // 10: aribor.UserConfig
	(*CreateRoleReq)(nil),                  // 11: aribor.CreateRoleReq
	(*CreateRoleRes)(nil),                  // 12: aribor.CreateRoleRes
	(*GetRoleReq)(nil),                     // 13: aribor.GetRoleReq
	(*GetRoleRes)(nil),                     // 14: aribor.GetRoleRes
	(*UpdateRoleReq)(nil),                  // 15: aribor.UpdateRoleReq
	(*UpdateRoleRes)(nil),                  // 16: aribor.UpdateRoleRes
	(*DeleteRoleReq)(nil),                  // 17: aribor.DeleteRoleReq
	(*DeleteRoleRes)(nil),                  // 18: aribor.DeleteRoleRes
	(*ListRoleReq)(nil),                    // 19: aribor.ListRoleReq
	(*ListRoleRes)(nil),                    // 20: aribor.ListRoleRes
	(*CreateInviteCodeReq)(nil),            // 21: aribor.CreateInviteCodeReq
	(*CreateInviteCodeRes)(nil),            // 22: aribor.CreateInviteCodeRes
	(*GetInviteCodeReq)(nil),               // 23: aribor.GetInviteCodeReq
	(*GetInviteCodeRes)(nil),               // 24: aribor.GetInviteCodeRes
	(*UpdateInviteCodeReq)(nil),            // 25: aribor.UpdateInviteCodeReq
	(*UpdateInviteCodeRes)(nil),            // 26: aribor.UpdateInviteCodeRes
	(*DeleteInviteCodeReq)(nil),            // 27: aribor.DeleteInviteCodeReq
	(*DeleteInviteCodeRes)(nil),            // 28: aribor.DeleteInviteCodeRes
	(*ListFilteredInviteCodeReq)(nil),      // 29: aribor.ListFilteredInviteCodeReq
	(*ListFilteredInviteCodeRes)(nil),      // 30: aribor.ListFilteredInviteCodeRes
	(*ListInviteCodeReq)(nil),              // 31: aribor.ListInviteCodeReq
	(*ListInviteCodeRes)(nil),              // 32: aribor.ListInviteCodeRes
	(*VersionReq)(nil),                     // 33: aribor.VersionReq
	(*VersionRes)(nil),                     // 34: aribor.VersionRes
	(*UserProfile_PhoneNumber)(nil),        // 35: aribor.UserProfile.PhoneNumber
	(*UserConfig_Layout)(nil),              // 36: aribor.UserConfig.Layout
	(*UserConfig_Layout_LayoutConfig)(nil), // 37: aribor.UserConfig.Layout.LayoutConfig
	(*UserConfig_Layout_LayoutConfig_LayoutBlockConfig)(nil), // 38: aribor.UserConfig.Layout.LayoutConfig.LayoutBlockConfig
	(*timestamppb.Timestamp)(nil),                            // 39: google.protobuf.Timestamp
}
var file_rf_example_proto_depIdxs = []int32{
	39, // 0: aribor.UserInviteCode.meta_valid_from:type_name -> google.protobuf.Timestamp
	39, // 1: aribor.UserInviteCode.meta_valid_to:type_name -> google.protobuf.Timestamp
	39, // 2: aribor.UserInviteCode.created_at:type_name -> google.protobuf.Timestamp
	39, // 3: aribor.UserInviteCode.deleted_at:type_name -> google.protobuf.Timestamp
	39, // 4: aribor.UserRole.created_at:type_name -> google.protobuf.Timestamp
	39, // 5: aribor.UserRole.updated_at:type_name -> google.protobuf.Timestamp
	39, // 6: aribor.UserRole.deleted_at:type_name -> google.protobuf.Timestamp
	7,  // 7: aribor.UserGroup.users:type_name -> aribor.User
	39, // 8: aribor.UserGroup.created_at:type_name -> google.protobuf.Timestamp
	39, // 9: aribor.UserGroup.updated_at:type_name -> google.protobuf.Timestamp
	39, // 10: aribor.UserGroup.deleted_at:type_name -> google.protobuf.Timestamp
	5,  // 11: aribor.User.user_role:type_name -> aribor.UserRole
	9,  // 12: aribor.User.user_profile:type_name -> aribor.UserProfile
	39, // 13: aribor.User.created_at:type_name -> google.protobuf.Timestamp
	39, // 14: aribor.User.updated_at:type_name -> google.protobuf.Timestamp
	39, // 15: aribor.User.deleted_at:type_name -> google.protobuf.Timestamp
	39, // 16: aribor.UserAddress.created_at:type_name -> google.protobuf.Timestamp
	39, // 17: aribor.UserAddress.updated_at:type_name -> google.protobuf.Timestamp
	39, // 18: aribor.UserAddress.deleted_at:type_name -> google.protobuf.Timestamp
	8,  // 19: aribor.UserProfile.address:type_name -> aribor.UserAddress
	10, // 20: aribor.UserProfile.settings:type_name -> aribor.UserConfig
	2,  // 21: aribor.UserProfile.dob:type_name -> aribor.Date
	35, // 22: aribor.UserProfile.phone_numbers:type_name -> aribor.UserProfile.PhoneNumber
	39, // 23: aribor.UserProfile.created_at:type_name -> google.protobuf.Timestamp
	39, // 24: aribor.UserProfile.updated_at:type_name -> google.protobuf.Timestamp
	39, // 25: aribor.UserProfile.deleted_at:type_name -> google.protobuf.Timestamp
	5,  // 26: aribor.CreateRoleReq.role:type_name -> aribor.UserRole
	5,  // 27: aribor.CreateRoleRes.role:type_name -> aribor.UserRole
	5,  // 28: aribor.GetRoleRes.role:type_name -> aribor.UserRole
	5,  // 29: aribor.UpdateRoleReq.role:type_name -> aribor.UserRole
	5,  // 30: aribor.UpdateRoleRes.role:type_name -> aribor.UserRole
	5,  // 31: aribor.ListRoleRes.role:type_name -> aribor.UserRole
	3,  // 32: aribor.CreateInviteCodeReq.inviteCode:type_name -> aribor.UserInviteCode
	3,  // 33: aribor.CreateInviteCodeRes.inviteCode:type_name -> aribor.UserInviteCode
	3,  // 34: aribor.GetInviteCodeRes.inviteCode:type_name -> aribor.UserInviteCode
	3,  // 35: aribor.UpdateInviteCodeReq.inviteCode:type_name -> aribor.UserInviteCode
	3,  // 36: aribor.UpdateInviteCodeRes.inviteCode:type_name -> aribor.UserInviteCode
	4,  // 37: aribor.ListFilteredInviteCodeReq.filter:type_name -> aribor.UserInviteCodeFilter
	3,  // 38: aribor.ListFilteredInviteCodeRes.inviteCode:type_name -> aribor.UserInviteCode
	3,  // 39: aribor.ListInviteCodeRes.inviteCode:type_name -> aribor.UserInviteCode
	0,  // 40: aribor.UserProfile.PhoneNumber.type:type_name -> aribor.UserProfile.PhoneType
	11, // 41: aribor.UserRoleService.CreateRole:input_type -> aribor.CreateRoleReq
	13, // 42: aribor.UserRoleService.GetRole:input_type -> aribor.GetRoleReq
	15, // 43: aribor.UserRoleService.UpdateRole:input_type -> aribor.UpdateRoleReq
	17, // 44: aribor.UserRoleService.DeleteRole:input_type -> aribor.DeleteRoleReq
	19, // 45: aribor.UserRoleService.ListRoles:input_type -> aribor.ListRoleReq
	21, // 46: aribor.UserInviteCodeService.CreateInviteCode:input_type -> aribor.CreateInviteCodeReq
	23, // 47: aribor.UserInviteCodeService.GetInviteCode:input_type -> aribor.GetInviteCodeReq
	25, // 48: aribor.UserInviteCodeService.UpdateInviteCode:input_type -> aribor.UpdateInviteCodeReq
	27, // 49: aribor.UserInviteCodeService.DeleteInviteCode:input_type -> aribor.DeleteInviteCodeReq
	31, // 50: aribor.UserInviteCodeService.ListInviteCodes:input_type -> aribor.ListInviteCodeReq
	29, // 51: aribor.UserInviteCodeService.ListFilteredInviteCodes:input_type -> aribor.ListFilteredInviteCodeReq
	33, // 52: aribor.UserInviteCodeService.GetVersion:input_type -> aribor.VersionReq
	12, // 53: aribor.UserRoleService.CreateRole:output_type -> aribor.CreateRoleRes
	14, // 54: aribor.UserRoleService.GetRole:output_type -> aribor.GetRoleRes
	16, // 55: aribor.UserRoleService.UpdateRole:output_type -> aribor.UpdateRoleRes
	18, // 56: aribor.UserRoleService.DeleteRole:output_type -> aribor.DeleteRoleRes
	20, // 57: aribor.UserRoleService.ListRoles:output_type -> aribor.ListRoleRes
	22, // 58: aribor.UserInviteCodeService.CreateInviteCode:output_type -> aribor.CreateInviteCodeRes
	24, // 59: aribor.UserInviteCodeService.GetInviteCode:output_type -> aribor.GetInviteCodeRes
	26, // 60: aribor.UserInviteCodeService.UpdateInviteCode:output_type -> aribor.UpdateInviteCodeRes
	28, // 61: aribor.UserInviteCodeService.DeleteInviteCode:output_type -> aribor.DeleteInviteCodeRes
	32, // 62: aribor.UserInviteCodeService.ListInviteCodes:output_type -> aribor.ListInviteCodeRes
	30, // 63: aribor.UserInviteCodeService.ListFilteredInviteCodes:output_type -> aribor.ListFilteredInviteCodeRes
	34, // 64: aribor.UserInviteCodeService.GetVersion:output_type -> aribor.VersionRes
	53, // [53:65] is the sub-list for method output_type
	41, // [41:53] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_rf_example_proto_init() }
func file_rf_example_proto_init() {
	if File_rf_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rf_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInviteCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInviteCodeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInviteCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInviteCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInviteCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInviteCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilteredInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilteredInviteCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInviteCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInviteCodeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfile_PhoneNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConfig_Layout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConfig_Layout_LayoutConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rf_example_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConfig_Layout_LayoutConfig_LayoutBlockConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rf_example_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_rf_example_proto_goTypes,
		DependencyIndexes: file_rf_example_proto_depIdxs,
		EnumInfos:         file_rf_example_proto_enumTypes,
		MessageInfos:      file_rf_example_proto_msgTypes,
	}.Build()
	File_rf_example_proto = out.File
	file_rf_example_proto_rawDesc = nil
	file_rf_example_proto_goTypes = nil
	file_rf_example_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserRoleServiceClient is the client API for UserRoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserRoleServiceClient interface {
	CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*CreateRoleRes, error)
	GetRole(ctx context.Context, in *GetRoleReq, opts ...grpc.CallOption) (*GetRoleRes, error)
	UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleRes, error)
	DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleRes, error)
	ListRoles(ctx context.Context, in *ListRoleReq, opts ...grpc.CallOption) (UserRoleService_ListRolesClient, error)
}

type userRoleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserRoleServiceClient(cc grpc.ClientConnInterface) UserRoleServiceClient {
	return &userRoleServiceClient{cc}
}

func (c *userRoleServiceClient) CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*CreateRoleRes, error) {
	out := new(CreateRoleRes)
	err := c.cc.Invoke(ctx, "/aribor.UserRoleService/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) GetRole(ctx context.Context, in *GetRoleReq, opts ...grpc.CallOption) (*GetRoleRes, error) {
	out := new(GetRoleRes)
	err := c.cc.Invoke(ctx, "/aribor.UserRoleService/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleRes, error) {
	out := new(UpdateRoleRes)
	err := c.cc.Invoke(ctx, "/aribor.UserRoleService/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleRes, error) {
	out := new(DeleteRoleRes)
	err := c.cc.Invoke(ctx, "/aribor.UserRoleService/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) ListRoles(ctx context.Context, in *ListRoleReq, opts ...grpc.CallOption) (UserRoleService_ListRolesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserRoleService_serviceDesc.Streams[0], "/aribor.UserRoleService/ListRoles", opts...)
	if err != nil {
		return nil, err
	}
	x := &userRoleServiceListRolesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserRoleService_ListRolesClient interface {
	Recv() (*ListRoleRes, error)
	grpc.ClientStream
}

type userRoleServiceListRolesClient struct {
	grpc.ClientStream
}

func (x *userRoleServiceListRolesClient) Recv() (*ListRoleRes, error) {
	m := new(ListRoleRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserRoleServiceServer is the server API for UserRoleService service.
type UserRoleServiceServer interface {
	CreateRole(context.Context, *CreateRoleReq) (*CreateRoleRes, error)
	GetRole(context.Context, *GetRoleReq) (*GetRoleRes, error)
	UpdateRole(context.Context, *UpdateRoleReq) (*UpdateRoleRes, error)
	DeleteRole(context.Context, *DeleteRoleReq) (*DeleteRoleRes, error)
	ListRoles(*ListRoleReq, UserRoleService_ListRolesServer) error
}

// UnimplementedUserRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserRoleServiceServer struct {
}

func (*UnimplementedUserRoleServiceServer) CreateRole(context.Context, *CreateRoleReq) (*CreateRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) GetRole(context.Context, *GetRoleReq) (*GetRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) UpdateRole(context.Context, *UpdateRoleReq) (*UpdateRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) DeleteRole(context.Context, *DeleteRoleReq) (*DeleteRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) ListRoles(*ListRoleReq, UserRoleService_ListRolesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListRoles not implemented")
}

func RegisterUserRoleServiceServer(s *grpc.Server, srv UserRoleServiceServer) {
	s.RegisterService(&_UserRoleService_serviceDesc, srv)
}

func _UserRoleService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserRoleService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).CreateRole(ctx, req.(*CreateRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserRoleService/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).GetRole(ctx, req.(*GetRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserRoleService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).UpdateRole(ctx, req.(*UpdateRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserRoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).DeleteRole(ctx, req.(*DeleteRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_ListRoles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRoleReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserRoleServiceServer).ListRoles(m, &userRoleServiceListRolesServer{stream})
}

type UserRoleService_ListRolesServer interface {
	Send(*ListRoleRes) error
	grpc.ServerStream
}

type userRoleServiceListRolesServer struct {
	grpc.ServerStream
}

func (x *userRoleServiceListRolesServer) Send(m *ListRoleRes) error {
	return x.ServerStream.SendMsg(m)
}

var _UserRoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aribor.UserRoleService",
	HandlerType: (*UserRoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRole",
			Handler:    _UserRoleService_CreateRole_Handler,
		},
		{
			MethodName: "GetRole",
			Handler:    _UserRoleService_GetRole_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _UserRoleService_UpdateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _UserRoleService_DeleteRole_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListRoles",
			Handler:       _UserRoleService_ListRoles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rf_example.proto",
}

// UserInviteCodeServiceClient is the client API for UserInviteCodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserInviteCodeServiceClient interface {
	CreateInviteCode(ctx context.Context, in *CreateInviteCodeReq, opts ...grpc.CallOption) (*CreateInviteCodeRes, error)
	GetInviteCode(ctx context.Context, in *GetInviteCodeReq, opts ...grpc.CallOption) (*GetInviteCodeRes, error)
	UpdateInviteCode(ctx context.Context, in *UpdateInviteCodeReq, opts ...grpc.CallOption) (*UpdateInviteCodeRes, error)
	DeleteInviteCode(ctx context.Context, in *DeleteInviteCodeReq, opts ...grpc.CallOption) (*DeleteInviteCodeRes, error)
	ListInviteCodes(ctx context.Context, in *ListInviteCodeReq, opts ...grpc.CallOption) (UserInviteCodeService_ListInviteCodesClient, error)
	ListFilteredInviteCodes(ctx context.Context, in *ListFilteredInviteCodeReq, opts ...grpc.CallOption) (UserInviteCodeService_ListFilteredInviteCodesClient, error)
	GetVersion(ctx context.Context, in *VersionReq, opts ...grpc.CallOption) (*VersionRes, error)
}

type userInviteCodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserInviteCodeServiceClient(cc grpc.ClientConnInterface) UserInviteCodeServiceClient {
	return &userInviteCodeServiceClient{cc}
}

func (c *userInviteCodeServiceClient) CreateInviteCode(ctx context.Context, in *CreateInviteCodeReq, opts ...grpc.CallOption) (*CreateInviteCodeRes, error) {
	out := new(CreateInviteCodeRes)
	err := c.cc.Invoke(ctx, "/aribor.UserInviteCodeService/CreateInviteCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInviteCodeServiceClient) GetInviteCode(ctx context.Context, in *GetInviteCodeReq, opts ...grpc.CallOption) (*GetInviteCodeRes, error) {
	out := new(GetInviteCodeRes)
	err := c.cc.Invoke(ctx, "/aribor.UserInviteCodeService/GetInviteCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInviteCodeServiceClient) UpdateInviteCode(ctx context.Context, in *UpdateInviteCodeReq, opts ...grpc.CallOption) (*UpdateInviteCodeRes, error) {
	out := new(UpdateInviteCodeRes)
	err := c.cc.Invoke(ctx, "/aribor.UserInviteCodeService/UpdateInviteCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInviteCodeServiceClient) DeleteInviteCode(ctx context.Context, in *DeleteInviteCodeReq, opts ...grpc.CallOption) (*DeleteInviteCodeRes, error) {
	out := new(DeleteInviteCodeRes)
	err := c.cc.Invoke(ctx, "/aribor.UserInviteCodeService/DeleteInviteCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInviteCodeServiceClient) ListInviteCodes(ctx context.Context, in *ListInviteCodeReq, opts ...grpc.CallOption) (UserInviteCodeService_ListInviteCodesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserInviteCodeService_serviceDesc.Streams[0], "/aribor.UserInviteCodeService/ListInviteCodes", opts...)
	if err != nil {
		return nil, err
	}
	x := &userInviteCodeServiceListInviteCodesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserInviteCodeService_ListInviteCodesClient interface {
	Recv() (*ListInviteCodeRes, error)
	grpc.ClientStream
}

type userInviteCodeServiceListInviteCodesClient struct {
	grpc.ClientStream
}

func (x *userInviteCodeServiceListInviteCodesClient) Recv() (*ListInviteCodeRes, error) {
	m := new(ListInviteCodeRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userInviteCodeServiceClient) ListFilteredInviteCodes(ctx context.Context, in *ListFilteredInviteCodeReq, opts ...grpc.CallOption) (UserInviteCodeService_ListFilteredInviteCodesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserInviteCodeService_serviceDesc.Streams[1], "/aribor.UserInviteCodeService/ListFilteredInviteCodes", opts...)
	if err != nil {
		return nil, err
	}
	x := &userInviteCodeServiceListFilteredInviteCodesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserInviteCodeService_ListFilteredInviteCodesClient interface {
	Recv() (*ListFilteredInviteCodeRes, error)
	grpc.ClientStream
}

type userInviteCodeServiceListFilteredInviteCodesClient struct {
	grpc.ClientStream
}

func (x *userInviteCodeServiceListFilteredInviteCodesClient) Recv() (*ListFilteredInviteCodeRes, error) {
	m := new(ListFilteredInviteCodeRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userInviteCodeServiceClient) GetVersion(ctx context.Context, in *VersionReq, opts ...grpc.CallOption) (*VersionRes, error) {
	out := new(VersionRes)
	err := c.cc.Invoke(ctx, "/aribor.UserInviteCodeService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserInviteCodeServiceServer is the server API for UserInviteCodeService service.
type UserInviteCodeServiceServer interface {
	CreateInviteCode(context.Context, *CreateInviteCodeReq) (*CreateInviteCodeRes, error)
	GetInviteCode(context.Context, *GetInviteCodeReq) (*GetInviteCodeRes, error)
	UpdateInviteCode(context.Context, *UpdateInviteCodeReq) (*UpdateInviteCodeRes, error)
	DeleteInviteCode(context.Context, *DeleteInviteCodeReq) (*DeleteInviteCodeRes, error)
	ListInviteCodes(*ListInviteCodeReq, UserInviteCodeService_ListInviteCodesServer) error
	ListFilteredInviteCodes(*ListFilteredInviteCodeReq, UserInviteCodeService_ListFilteredInviteCodesServer) error
	GetVersion(context.Context, *VersionReq) (*VersionRes, error)
}

// UnimplementedUserInviteCodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserInviteCodeServiceServer struct {
}

func (*UnimplementedUserInviteCodeServiceServer) CreateInviteCode(context.Context, *CreateInviteCodeReq) (*CreateInviteCodeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInviteCode not implemented")
}
func (*UnimplementedUserInviteCodeServiceServer) GetInviteCode(context.Context, *GetInviteCodeReq) (*GetInviteCodeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInviteCode not implemented")
}
func (*UnimplementedUserInviteCodeServiceServer) UpdateInviteCode(context.Context, *UpdateInviteCodeReq) (*UpdateInviteCodeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInviteCode not implemented")
}
func (*UnimplementedUserInviteCodeServiceServer) DeleteInviteCode(context.Context, *DeleteInviteCodeReq) (*DeleteInviteCodeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInviteCode not implemented")
}
func (*UnimplementedUserInviteCodeServiceServer) ListInviteCodes(*ListInviteCodeReq, UserInviteCodeService_ListInviteCodesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListInviteCodes not implemented")
}
func (*UnimplementedUserInviteCodeServiceServer) ListFilteredInviteCodes(*ListFilteredInviteCodeReq, UserInviteCodeService_ListFilteredInviteCodesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListFilteredInviteCodes not implemented")
}
func (*UnimplementedUserInviteCodeServiceServer) GetVersion(context.Context, *VersionReq) (*VersionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}

func RegisterUserInviteCodeServiceServer(s *grpc.Server, srv UserInviteCodeServiceServer) {
	s.RegisterService(&_UserInviteCodeService_serviceDesc, srv)
}

func _UserInviteCodeService_CreateInviteCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInviteCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInviteCodeServiceServer).CreateInviteCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserInviteCodeService/CreateInviteCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInviteCodeServiceServer).CreateInviteCode(ctx, req.(*CreateInviteCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInviteCodeService_GetInviteCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInviteCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInviteCodeServiceServer).GetInviteCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserInviteCodeService/GetInviteCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInviteCodeServiceServer).GetInviteCode(ctx, req.(*GetInviteCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInviteCodeService_UpdateInviteCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInviteCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInviteCodeServiceServer).UpdateInviteCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserInviteCodeService/UpdateInviteCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInviteCodeServiceServer).UpdateInviteCode(ctx, req.(*UpdateInviteCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInviteCodeService_DeleteInviteCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInviteCodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInviteCodeServiceServer).DeleteInviteCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserInviteCodeService/DeleteInviteCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInviteCodeServiceServer).DeleteInviteCode(ctx, req.(*DeleteInviteCodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInviteCodeService_ListInviteCodes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListInviteCodeReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserInviteCodeServiceServer).ListInviteCodes(m, &userInviteCodeServiceListInviteCodesServer{stream})
}

type UserInviteCodeService_ListInviteCodesServer interface {
	Send(*ListInviteCodeRes) error
	grpc.ServerStream
}

type userInviteCodeServiceListInviteCodesServer struct {
	grpc.ServerStream
}

func (x *userInviteCodeServiceListInviteCodesServer) Send(m *ListInviteCodeRes) error {
	return x.ServerStream.SendMsg(m)
}

func _UserInviteCodeService_ListFilteredInviteCodes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListFilteredInviteCodeReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserInviteCodeServiceServer).ListFilteredInviteCodes(m, &userInviteCodeServiceListFilteredInviteCodesServer{stream})
}

type UserInviteCodeService_ListFilteredInviteCodesServer interface {
	Send(*ListFilteredInviteCodeRes) error
	grpc.ServerStream
}

type userInviteCodeServiceListFilteredInviteCodesServer struct {
	grpc.ServerStream
}

func (x *userInviteCodeServiceListFilteredInviteCodesServer) Send(m *ListFilteredInviteCodeRes) error {
	return x.ServerStream.SendMsg(m)
}

func _UserInviteCodeService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInviteCodeServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aribor.UserInviteCodeService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInviteCodeServiceServer).GetVersion(ctx, req.(*VersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserInviteCodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aribor.UserInviteCodeService",
	HandlerType: (*UserInviteCodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInviteCode",
			Handler:    _UserInviteCodeService_CreateInviteCode_Handler,
		},
		{
			MethodName: "GetInviteCode",
			Handler:    _UserInviteCodeService_GetInviteCode_Handler,
		},
		{
			MethodName: "UpdateInviteCode",
			Handler:    _UserInviteCodeService_UpdateInviteCode_Handler,
		},
		{
			MethodName: "DeleteInviteCode",
			Handler:    _UserInviteCodeService_DeleteInviteCode_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _UserInviteCodeService_GetVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListInviteCodes",
			Handler:       _UserInviteCodeService_ListInviteCodes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListFilteredInviteCodes",
			Handler:       _UserInviteCodeService_ListFilteredInviteCodes_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rf_example.proto",
}
