admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - address: { socket_address: { address: 0.0.0.0, port_value: 8080 }}
    per_connection_buffer_limit_bytes: 32768
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          use_remote_address: true
          common_http_protocol_options:
            idle_timeout: 3600s
            headers_with_underscores_action: REJECT_REQUEST
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536
            initial_connection_window_size: 1048576
          stream_idle_timeout: 300s
          request_timeout: 300s
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
              format: "[%START_TIME%] '%RESPONSE_CODE% [%GRPC_STATUS%]' | %REQ(:METHOD)% target=%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% | protocol=%PROTOCOL%, host='%UPSTREAM_HOST%' (authority='%REQ(:AUTHORITY)%') |
                        bytes_in=%BYTES_RECEIVED% bytes_out=%BYTES_SENT% duration=%DURATION%
                        response_service_time=%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% ('%REQ(X-FORWARDED-FOR)%')\n'"
          
          route_config:
            name: local_route
            virtual_hosts:
              - name: local_backend
                domains: [ "*" ]
                cors:
                  max_age: "1728000"
                  allow_methods: GET, PUT, DELETE, POST, OPTIONS
                  allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                  expose_headers: custom-header-1,grpc-status,grpc-message,grpc-status-details-bin,grpc-status-details-text
                  allow_origin_string_match: { safe_regex: { google_re2: { }, regex: \* }}
                  filter_enabled:
                    default_value: { numerator: 100, denominator: HUNDRED }
                    runtime_key: cors.www.enabled

                routes:
                  - match: { prefix: /grpc-user-invite-codes }
                    route:
                      cluster: c_grpc_user_invite_codes
                      max_grpc_timeout: 0s
                      idle_timeout: 15.0s
                      regex_rewrite:
                        pattern:
                          regex: ^/grpc-user-invite-codes[/]*(.*)$
                          google_re2: { }
                        substitution: /\1
                        
                  - match: { prefix: /grpc-user-roles }
                    route:
                      cluster: c_grpc_user_roles
                      max_grpc_timeout: 0s
                      idle_timeout: 15.0s
                      regex_rewrite:
                        pattern:
                          regex: ^/grpc-user-roles[/]*(.*)$
                          google_re2: { }
                        substitution: /\1

          http_filters:
          - name: envoy.filters.http.cors
            typed_config: { }
          - name: envoy.filters.http.grpc_web
            typed_config: { }
          - name: envoy.filters.http.router
            typed_config: { }

  clusters:
  - name: c_grpc_user_invite_codes
    connect_timeout: 15.0s
    per_connection_buffer_limit_bytes: 32768
    type: strict_dns
    dns_lookup_family: V4_ONLY
    lb_policy: round_robin
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 300
    http2_protocol_options:
      initial_stream_window_size: 65536
      initial_connection_window_size: 1048576
    load_assignment:
      cluster_name: c_grpc_user_invite_codes
      endpoints:
      - lb_endpoints:
          - endpoint: { address: { socket_address: { address: rf-example-grpc-user-invite-code, port_value: 51051 }}}

  - name: c_grpc_user_roles
    connect_timeout: 15.0s
    per_connection_buffer_limit_bytes: 32768
    type: strict_dns
    dns_lookup_family: V4_ONLY
    lb_policy: round_robin
    upstream_connection_options:
      tcp_keepalive:
        keepalive_time: 300
    http2_protocol_options:
      initial_stream_window_size: 65536
      initial_connection_window_size: 1048576
    load_assignment:
      cluster_name: c_grpc_user_roles
      endpoints:
        - lb_endpoints:
            - endpoint: { address: { socket_address: { address: rf-example-grpc-user-role, port_value: 51052 }}}

layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        resource_limits:
          listener:
            example_listener_name:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000