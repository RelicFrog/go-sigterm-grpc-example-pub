// Copyright 2020-2021 Team RelicFrog
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: api_usr_role.proto

package api_usr_role

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{0}
}

type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MetaName        string                 `protobuf:"bytes,2,opt,name=meta_name,json=metaName,proto3" json:"meta_name,omitempty"` // translatable role name (e.g. "ROLE_ADMIN")
	MetaDescription string                 `protobuf:"bytes,3,opt,name=meta_description,json=metaDescription,proto3" json:"meta_description,omitempty"`
	MetaAppHandle   string                 `protobuf:"bytes,4,opt,name=meta_app_handle,json=metaAppHandle,proto3" json:"meta_app_handle,omitempty"` // as url filter parameter (e.g. "admin", "director")
	MetaAppIcon     string                 `protobuf:"bytes,5,opt,name=meta_app_icon,json=metaAppIcon,proto3" json:"meta_app_icon,omitempty"`
	MetaAppColorHex string                 `protobuf:"bytes,6,opt,name=meta_app_color_hex,json=metaAppColorHex,proto3" json:"meta_app_color_hex,omitempty"`
	IsLocked        bool                   `protobuf:"varint,7,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"` // not deletable (e.g. for role "ROLE_ADMIN")
	IsFixture       bool                   `protobuf:"varint,8,opt,name=is_fixture,json=isFixture,proto3" json:"is_fixture,omitempty"`
	IsDeleted       bool                   `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{1}
}

func (x *UserRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRole) GetMetaName() string {
	if x != nil {
		return x.MetaName
	}
	return ""
}

func (x *UserRole) GetMetaDescription() string {
	if x != nil {
		return x.MetaDescription
	}
	return ""
}

func (x *UserRole) GetMetaAppHandle() string {
	if x != nil {
		return x.MetaAppHandle
	}
	return ""
}

func (x *UserRole) GetMetaAppIcon() string {
	if x != nil {
		return x.MetaAppIcon
	}
	return ""
}

func (x *UserRole) GetMetaAppColorHex() string {
	if x != nil {
		return x.MetaAppColorHex
	}
	return ""
}

func (x *UserRole) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *UserRole) GetIsFixture() bool {
	if x != nil {
		return x.IsFixture
	}
	return false
}

func (x *UserRole) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *UserRole) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserRole) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserRole) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type CreateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleReq) Reset() {
	*x = CreateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleReq) ProtoMessage() {}

func (x *CreateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleReq.ProtoReflect.Descriptor instead.
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRoleReq) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type CreateRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateRoleRes) Reset() {
	*x = CreateRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRes) ProtoMessage() {}

func (x *CreateRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRes.ProtoReflect.Descriptor instead.
func (*CreateRoleRes) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type GetRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRoleReq) Reset() {
	*x = GetRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleReq) ProtoMessage() {}

func (x *GetRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleReq.ProtoReflect.Descriptor instead.
func (*GetRoleReq) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoleReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleRes) Reset() {
	*x = GetRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRes) ProtoMessage() {}

func (x *GetRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRes.ProtoReflect.Descriptor instead.
func (*GetRoleRes) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRoleReq) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type UpdateRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateRoleRes) Reset() {
	*x = UpdateRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRes) ProtoMessage() {}

func (x *UpdateRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRes.ProtoReflect.Descriptor instead.
func (*UpdateRoleRes) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRoleReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteRoleRes) Reset() {
	*x = DeleteRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRes) ProtoMessage() {}

func (x *DeleteRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRes.ProtoReflect.Descriptor instead.
func (*DeleteRoleRes) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteRoleRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRoleReq) Reset() {
	*x = ListRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleReq) ProtoMessage() {}

func (x *ListRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleReq.ProtoReflect.Descriptor instead.
func (*ListRoleReq) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{10}
}

type ListRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *UserRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ListRoleRes) Reset() {
	*x = ListRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRoleRes) ProtoMessage() {}

func (x *ListRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRoleRes.ProtoReflect.Descriptor instead.
func (*ListRoleRes) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{11}
}

func (x *ListRoleRes) GetRole() *UserRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type VersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VersionReq) Reset() {
	*x = VersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionReq) ProtoMessage() {}

func (x *VersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionReq.ProtoReflect.Descriptor instead.
func (*VersionReq) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{12}
}

type VersionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionRes) Reset() {
	*x = VersionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_usr_role_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRes) ProtoMessage() {}

func (x *VersionRes) ProtoReflect() protoreflect.Message {
	mi := &file_api_usr_role_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRes.ProtoReflect.Descriptor instead.
func (*VersionRes) Descriptor() ([]byte, []int) {
	return file_api_usr_role_proto_rawDescGZIP(), []int{13}
}

func (x *VersionRes) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_api_usr_role_proto protoreflect.FileDescriptor

var file_api_usr_role_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xe7, 0x03, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x61,
	0x41, 0x70, 0x70, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x12, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x68, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x41,
	0x70, 0x70, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x69,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46,
	0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73,
	0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x0d,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x22, 0x39, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x0c, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x26, 0x0a, 0x0a, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xaf,
	0x03, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73,
	0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x40,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x73, 0x72, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_usr_role_proto_rawDescOnce sync.Once
	file_api_usr_role_proto_rawDescData = file_api_usr_role_proto_rawDesc
)

func file_api_usr_role_proto_rawDescGZIP() []byte {
	file_api_usr_role_proto_rawDescOnce.Do(func() {
		file_api_usr_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_usr_role_proto_rawDescData)
	})
	return file_api_usr_role_proto_rawDescData
}

var file_api_usr_role_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_usr_role_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: api_usr_role.Empty
	(*UserRole)(nil),              // 1: api_usr_role.UserRole
	(*CreateRoleReq)(nil),         // 2: api_usr_role.CreateRoleReq
	(*CreateRoleRes)(nil),         // 3: api_usr_role.CreateRoleRes
	(*GetRoleReq)(nil),            // 4: api_usr_role.GetRoleReq
	(*GetRoleRes)(nil),            // 5: api_usr_role.GetRoleRes
	(*UpdateRoleReq)(nil),         // 6: api_usr_role.UpdateRoleReq
	(*UpdateRoleRes)(nil),         // 7: api_usr_role.UpdateRoleRes
	(*DeleteRoleReq)(nil),         // 8: api_usr_role.DeleteRoleReq
	(*DeleteRoleRes)(nil),         // 9: api_usr_role.DeleteRoleRes
	(*ListRoleReq)(nil),           // 10: api_usr_role.ListRoleReq
	(*ListRoleRes)(nil),           // 11: api_usr_role.ListRoleRes
	(*VersionReq)(nil),            // 12: api_usr_role.VersionReq
	(*VersionRes)(nil),            // 13: api_usr_role.VersionRes
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_api_usr_role_proto_depIdxs = []int32{
	14, // 0: api_usr_role.UserRole.created_at:type_name -> google.protobuf.Timestamp
	14, // 1: api_usr_role.UserRole.updated_at:type_name -> google.protobuf.Timestamp
	14, // 2: api_usr_role.UserRole.deleted_at:type_name -> google.protobuf.Timestamp
	1,  // 3: api_usr_role.CreateRoleReq.role:type_name -> api_usr_role.UserRole
	1,  // 4: api_usr_role.CreateRoleRes.role:type_name -> api_usr_role.UserRole
	1,  // 5: api_usr_role.GetRoleRes.role:type_name -> api_usr_role.UserRole
	1,  // 6: api_usr_role.UpdateRoleReq.role:type_name -> api_usr_role.UserRole
	1,  // 7: api_usr_role.UpdateRoleRes.role:type_name -> api_usr_role.UserRole
	1,  // 8: api_usr_role.ListRoleRes.role:type_name -> api_usr_role.UserRole
	2,  // 9: api_usr_role.UserRoleService.CreateRole:input_type -> api_usr_role.CreateRoleReq
	4,  // 10: api_usr_role.UserRoleService.GetRole:input_type -> api_usr_role.GetRoleReq
	6,  // 11: api_usr_role.UserRoleService.UpdateRole:input_type -> api_usr_role.UpdateRoleReq
	8,  // 12: api_usr_role.UserRoleService.DeleteRole:input_type -> api_usr_role.DeleteRoleReq
	10, // 13: api_usr_role.UserRoleService.ListRoles:input_type -> api_usr_role.ListRoleReq
	12, // 14: api_usr_role.UserRoleService.GetVersion:input_type -> api_usr_role.VersionReq
	3,  // 15: api_usr_role.UserRoleService.CreateRole:output_type -> api_usr_role.CreateRoleRes
	5,  // 16: api_usr_role.UserRoleService.GetRole:output_type -> api_usr_role.GetRoleRes
	7,  // 17: api_usr_role.UserRoleService.UpdateRole:output_type -> api_usr_role.UpdateRoleRes
	9,  // 18: api_usr_role.UserRoleService.DeleteRole:output_type -> api_usr_role.DeleteRoleRes
	11, // 19: api_usr_role.UserRoleService.ListRoles:output_type -> api_usr_role.ListRoleRes
	13, // 20: api_usr_role.UserRoleService.GetVersion:output_type -> api_usr_role.VersionRes
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_usr_role_proto_init() }
func file_api_usr_role_proto_init() {
	if File_api_usr_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_usr_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_usr_role_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_usr_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_usr_role_proto_goTypes,
		DependencyIndexes: file_api_usr_role_proto_depIdxs,
		MessageInfos:      file_api_usr_role_proto_msgTypes,
	}.Build()
	File_api_usr_role_proto = out.File
	file_api_usr_role_proto_rawDesc = nil
	file_api_usr_role_proto_goTypes = nil
	file_api_usr_role_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserRoleServiceClient is the client API for UserRoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserRoleServiceClient interface {
	CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*CreateRoleRes, error)
	GetRole(ctx context.Context, in *GetRoleReq, opts ...grpc.CallOption) (*GetRoleRes, error)
	UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleRes, error)
	DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleRes, error)
	ListRoles(ctx context.Context, in *ListRoleReq, opts ...grpc.CallOption) (UserRoleService_ListRolesClient, error)
	GetVersion(ctx context.Context, in *VersionReq, opts ...grpc.CallOption) (*VersionRes, error)
}

type userRoleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserRoleServiceClient(cc grpc.ClientConnInterface) UserRoleServiceClient {
	return &userRoleServiceClient{cc}
}

func (c *userRoleServiceClient) CreateRole(ctx context.Context, in *CreateRoleReq, opts ...grpc.CallOption) (*CreateRoleRes, error) {
	out := new(CreateRoleRes)
	err := c.cc.Invoke(ctx, "/api_usr_role.UserRoleService/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) GetRole(ctx context.Context, in *GetRoleReq, opts ...grpc.CallOption) (*GetRoleRes, error) {
	out := new(GetRoleRes)
	err := c.cc.Invoke(ctx, "/api_usr_role.UserRoleService/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleRes, error) {
	out := new(UpdateRoleRes)
	err := c.cc.Invoke(ctx, "/api_usr_role.UserRoleService/UpdateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleRes, error) {
	out := new(DeleteRoleRes)
	err := c.cc.Invoke(ctx, "/api_usr_role.UserRoleService/DeleteRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userRoleServiceClient) ListRoles(ctx context.Context, in *ListRoleReq, opts ...grpc.CallOption) (UserRoleService_ListRolesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserRoleService_serviceDesc.Streams[0], "/api_usr_role.UserRoleService/ListRoles", opts...)
	if err != nil {
		return nil, err
	}
	x := &userRoleServiceListRolesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserRoleService_ListRolesClient interface {
	Recv() (*ListRoleRes, error)
	grpc.ClientStream
}

type userRoleServiceListRolesClient struct {
	grpc.ClientStream
}

func (x *userRoleServiceListRolesClient) Recv() (*ListRoleRes, error) {
	m := new(ListRoleRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userRoleServiceClient) GetVersion(ctx context.Context, in *VersionReq, opts ...grpc.CallOption) (*VersionRes, error) {
	out := new(VersionRes)
	err := c.cc.Invoke(ctx, "/api_usr_role.UserRoleService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserRoleServiceServer is the server API for UserRoleService service.
type UserRoleServiceServer interface {
	CreateRole(context.Context, *CreateRoleReq) (*CreateRoleRes, error)
	GetRole(context.Context, *GetRoleReq) (*GetRoleRes, error)
	UpdateRole(context.Context, *UpdateRoleReq) (*UpdateRoleRes, error)
	DeleteRole(context.Context, *DeleteRoleReq) (*DeleteRoleRes, error)
	ListRoles(*ListRoleReq, UserRoleService_ListRolesServer) error
	GetVersion(context.Context, *VersionReq) (*VersionRes, error)
}

// UnimplementedUserRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserRoleServiceServer struct {
}

func (*UnimplementedUserRoleServiceServer) CreateRole(context.Context, *CreateRoleReq) (*CreateRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) GetRole(context.Context, *GetRoleReq) (*GetRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) UpdateRole(context.Context, *UpdateRoleReq) (*UpdateRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) DeleteRole(context.Context, *DeleteRoleReq) (*DeleteRoleRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRole not implemented")
}
func (*UnimplementedUserRoleServiceServer) ListRoles(*ListRoleReq, UserRoleService_ListRolesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListRoles not implemented")
}
func (*UnimplementedUserRoleServiceServer) GetVersion(context.Context, *VersionReq) (*VersionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}

func RegisterUserRoleServiceServer(s *grpc.Server, srv UserRoleServiceServer) {
	s.RegisterService(&_UserRoleService_serviceDesc, srv)
}

func _UserRoleService_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api_usr_role.UserRoleService/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).CreateRole(ctx, req.(*CreateRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api_usr_role.UserRoleService/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).GetRole(ctx, req.(*GetRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_UpdateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).UpdateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api_usr_role.UserRoleService/UpdateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).UpdateRole(ctx, req.(*UpdateRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_DeleteRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).DeleteRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api_usr_role.UserRoleService/DeleteRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).DeleteRole(ctx, req.(*DeleteRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserRoleService_ListRoles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRoleReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserRoleServiceServer).ListRoles(m, &userRoleServiceListRolesServer{stream})
}

type UserRoleService_ListRolesServer interface {
	Send(*ListRoleRes) error
	grpc.ServerStream
}

type userRoleServiceListRolesServer struct {
	grpc.ServerStream
}

func (x *userRoleServiceListRolesServer) Send(m *ListRoleRes) error {
	return x.ServerStream.SendMsg(m)
}

func _UserRoleService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserRoleServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api_usr_role.UserRoleService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserRoleServiceServer).GetVersion(ctx, req.(*VersionReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserRoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api_usr_role.UserRoleService",
	HandlerType: (*UserRoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRole",
			Handler:    _UserRoleService_CreateRole_Handler,
		},
		{
			MethodName: "GetRole",
			Handler:    _UserRoleService_GetRole_Handler,
		},
		{
			MethodName: "UpdateRole",
			Handler:    _UserRoleService_UpdateRole_Handler,
		},
		{
			MethodName: "DeleteRole",
			Handler:    _UserRoleService_DeleteRole_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _UserRoleService_GetVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListRoles",
			Handler:       _UserRoleService_ListRoles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api_usr_role.proto",
}
